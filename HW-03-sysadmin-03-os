1. chdir("/tmp")

2. Командой strace -e trace=file file полмотрел все системные вызовы которые касаются файлов
  openat(AT_FDCWD, "/usr/share/misc/magic.mgc", O_RDONLY) = 3
  file /usr/share/misc/magic.mgc
  ../../lib/file/magic.mgc

3. запустил пинг в фоне tail -f read_something.ry &
 затем удалил read_something.ry - rm read_something.ry
 увидел что файл (deleted) и дескриптор 3 командой sudo lsof -p 2244
 и перезаписал содержимое командой echo '1' > /proc/2244/fd/3
 
4. зомби-процессы - несуществующие процессы, занимающие место в таблице системных процессов. 
 Таблица процессов состоит из идентификатора процесса,
ссылки на плату и другой полезной информации,связанной с процессом.
Зомби-процессы имеют свои собственные идентификаторы процессов и информацию об управлении памятью.
Поскольку ОС Linux имеет ограниченное количество доступных идентификаторов процессов,
другие процессы не могут использовать PID, пока процесс-зомби не остановится.
Ресурсов не занимает

5. vagrant@vagrant:/usr/sbin$ sudo /usr/sbin/opensnoop-bpfcc
PID    COMM               FD ERR PATH
633    irqbalance          6   0 /proc/interrupts
633    irqbalance          6   0 /proc/stat
633    irqbalance          6   0 /proc/irq/20/smp_affinity
633    irqbalance          6   0 /proc/irq/0/smp_affinity
633    irqbalance          6   0 /proc/irq/1/smp_affinity
633    irqbalance          6   0 /proc/irq/8/smp_affinity
633    irqbalance          6   0 /proc/irq/12/smp_affinity
633    irqbalance          6   0 /proc/irq/14/smp_affinity
633    irqbalance          6   0 /proc/irq/15/smp_affinity
930    vminfo              4   0 /var/run/utmp
629    dbus-daemon        -1   2 /usr/local/share/dbus-1/system-services
629    dbus-daemon        20   0 /usr/share/dbus-1/system-services
629    dbus-daemon        -1   2 /lib/dbus-1/system-services
629    dbus-daemon        20   0 /var/lib/snapd/dbus-1/system-services/

6. Из UNAME(2) Part of the utsname information is also accessible via /proc/sys/kernel/{ostype, hostname, osrelease, version, domainname}.

7. 
; - Последовательным выполнением команд. Вне зависимости от того, как выполнилась предыдущая команда, вторая команда должна будет запуститься и т.д.
&& - Каждая следующая команда выполняется только при успешном выполнении предыдущей
set -e останавливает выполнение скрипта, если в команде или конвейере произошла ошибка - что противоположно поведению оболочки по умолчанию,
которое заключается в игнорировании ошибок в скриптах
использовать в bash &&, если применить set -e не имеет смысла

8. set -euxo pipefail - поможет в отладке и выявлению багов в скрипте
-e Немедленно завершите работу, если команда завершается с ненулевым статусом
-u Рассматривает сброс (unset) переменной как ошибку при выполнении parameter expansion. 
 Неинтерактивные оболочки завершают свое выполнение при такой ошибке.
-x Выводит команды и их аргументы по мере их выполнения
-o pipefail - Возвращаемое значение конвейера - это статус последней команды для завершения с ненулевым статусом или ноль, 
   если ни одна команда не завершилась с ненулевым статусом
   
9. Наиболее часто встречающийся статус T- остановлен сигналом управления задачами
s - является лидером сеанса
+ - находится в группе процессов переднего плана
vagrant@vagrant:~$ ps -o stat
STAT
Ss
T
T
T
T
T
T
T
T
T
R+
